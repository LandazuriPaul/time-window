name: Build artifacts

on:
  workflow_call:

env:
  REGISTRY: ghcr.io

jobs:
  get_next_release_version:
    permissions:
      contents: write
    outputs:
      next_release_version: ${{ steps.semantic.outputs.NEXT_RELEASE_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Get next version
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export NEXT_RELEASE_VERSION=$(npx semantic-release --dry-run | grep 'next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "NEXT_RELEASE_VERSION=${NEXT_RELEASE_VERSION}" >> $GITHUB_OUTPUT

  docker_image:
    needs:
      - get_next_release_version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Go version
        id: go_version
        shell: bash
        run: |
          echo "GO_VERSION=$(sed -En 's/^go[[:space:]]+([[:digit:].]+)$/\1/p' go.mod)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set REPOSITORY (lowercase)
        run: echo "REPOSITORY=${GITHUB_REPOSITORY@L}" >>${GITHUB_ENV}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          build-args:
            GO_VERSION=${{ steps.go_version.outputs.GO_VERSION }}
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:v${{ needs.get_next_release_version.outputs.next_release_version }}
